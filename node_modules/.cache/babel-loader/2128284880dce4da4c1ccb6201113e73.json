{"ast":null,"code":"var _jsxFileName = \"/Users/olgaevdokimova/Documents/GitHub/goit-react-hw-01-component/src/components/friendlist/Friendlist.jsx\";\nimport PropTypes from 'prop-types';\nimport { Friendlist, FriendSection } from './Friendlist.styled';\nimport { FriendListItem } from './FriendListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FriendList = _ref => {\n  let {\n    props\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(FriendSection, {\n    children: /*#__PURE__*/_jsxDEV(Friendlist, {\n      children: props.map(prop => {\n        return /*#__PURE__*/_jsxDEV(FriendListItem, {\n          avatar: prop.avatar,\n          name: prop.name,\n          isOnline: prop.isOnline\n        }, prop.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = FriendList;\nFriendlist.propTypes = {\n  props: PropTypes.arrayOf(PropTypes.exact({\n    id: PropTypes.number.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired\n  }))\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendList\");","map":{"version":3,"sources":["/Users/olgaevdokimova/Documents/GitHub/goit-react-hw-01-component/src/components/friendlist/Friendlist.jsx"],"names":["PropTypes","Friendlist","FriendSection","FriendListItem","FriendList","props","map","prop","avatar","name","isOnline","id","propTypes","arrayOf","exact","number","isRequired","bool","string"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,qBAA1C;AACA,SAASC,cAAT,QAA+B,kBAA/B;;AAEA,OAAO,MAAMC,UAAU,GAAG,QAAa;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AACnC,sBACI,QAAC,aAAD;AAAA,2BACI,QAAC,UAAD;AAAA,gBACKA,KAAK,CAACC,GAAN,CAAUC,IAAI,IAAI;AACf,4BACI,QAAC,cAAD;AAEI,UAAA,MAAM,EAAEA,IAAI,CAACC,MAFjB;AAGI,UAAA,IAAI,EAAED,IAAI,CAACE,IAHf;AAII,UAAA,QAAQ,EAAEF,IAAI,CAACG;AAJnB,WACSH,IAAI,CAACI,EADd;AAAA;AAAA;AAAA;AAAA,gBADJ;AAQH,OATA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAhBM;KAAMP,U;AAkBbH,UAAU,CAACW,SAAX,GAAuB;AACnBP,EAAAA,KAAK,EAAEL,SAAS,CAACa,OAAV,CACHb,SAAS,CAACc,KAAV,CAAgB;AACZH,IAAAA,EAAE,EAAEX,SAAS,CAACe,MAAV,CAAiBC,UADT;AAEZN,IAAAA,QAAQ,EAAEV,SAAS,CAACiB,IAAV,CAAeD,UAFb;AAGZR,IAAAA,MAAM,EAAER,SAAS,CAACkB,MAAV,CAAiBF,UAHb;AAIZP,IAAAA,IAAI,EAAET,SAAS,CAACkB,MAAV,CAAiBF;AAJX,GAAhB,CADG;AADY,CAAvB","sourcesContent":["import PropTypes from 'prop-types';\nimport { Friendlist, FriendSection } from './Friendlist.styled';\nimport { FriendListItem } from './FriendListItem';\n\nexport const FriendList = ({props}) => {\n    return (\n        <FriendSection>\n            <Friendlist>\n                {props.map(prop => {\n                    return (\n                        <FriendListItem\n                            key={prop.id}\n                            avatar={prop.avatar}\n                            name={prop.name}\n                            isOnline={prop.isOnline}\n                        />\n                    );\n                })}\n            </Friendlist>\n        </FriendSection>);\n}\n\nFriendlist.propTypes = {\n    props: PropTypes.arrayOf(\n        PropTypes.exact({\n            id: PropTypes.number.isRequired,\n            isOnline: PropTypes.bool.isRequired,\n            avatar: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n        })\n    )\n}"]},"metadata":{},"sourceType":"module"}